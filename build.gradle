import groovy.json.JsonSlurper
import thermos.CreateChangelog
import thermos.InstallBundle
import thermos.VersionParser

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { name 'prok'; url 'https://repo.prok.pw/' }
        maven { name 'spigot'; url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { name 'forge'; url 'https://files.minecraftforge.net/maven' }
        maven { name 'sonatype'; url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { name 'maven2-repo1'; url 'https://repo1.maven.org/maven2/' }
        maven { name 'repo_apacheorg'; url 'https://repo.maven.apache.org/maven2/' }
        maven { name 'atlassian'; url 'https://packages.atlassian.com/mvn/maven-atlassian-external/' }
        maven { name 'sonatype-release'; url 'https://oss.sonatype.org/content/repositories/releases/' }
        maven { name 'jbossea'; url 'https://repository.jboss.org/nexus/content/repositories/ea/' }
        maven { name 'atlassian-public'; url 'https://maven.atlassian.com/content/repositories/atlassian-public/' }
        maven { name 'mulesoft-public'; url 'https://repository.mulesoft.org/nexus/content/repositories/public/' }
        maven { name 'wso2-public'; url 'https://maven.wso2.org/nexus/content/repositories/public/' }
        maven { name 'kotlin-dev'; url 'https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev/' }
        maven { name 'spring-release'; url 'https://repo.spring.io/libs-release/' }
        maven { name 'github'; url 'https://github.com/juanmuscaria/maven/raw/master' }
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

tasks.whenTaskAdded {
    if (it.name.startsWith('publish')) it.dependsOn 'preparePublication'
}

apply plugin: 'maven'
apply plugin: 'cauldron'
apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    clear()
    mavenCentral()
    jcenter()
    maven { name 'prok'; url 'https://repo.prok.pw/' }
    maven { name 'spigot'; url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { name 'forge'; url 'https://files.minecraftforge.net/maven' }
    maven { name 'sonatype'; url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { name 'maven2-repo1'; url 'https://repo1.maven.org/maven2/' }
    maven { name 'repo_apacheorg'; url 'https://repo.maven.apache.org/maven2/' }
    maven { name 'atlassian'; url 'https://packages.atlassian.com/mvn/maven-atlassian-external/' }
    maven { name 'sonatype-release'; url 'https://oss.sonatype.org/content/repositories/releases/' }
    maven { name 'jbossea'; url 'https://repository.jboss.org/nexus/content/repositories/ea/' }
    maven { name 'atlassian-public'; url 'https://maven.atlassian.com/content/repositories/atlassian-public/' }
    maven { name 'mulesoft-public'; url 'https://repository.mulesoft.org/nexus/content/repositories/public/' }
    maven { name 'wso2-public'; url 'https://maven.wso2.org/nexus/content/repositories/public/' }
    maven { name 'kotlin-dev'; url 'https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev/' }
    maven { name 'spring-release'; url 'https://repo.spring.io/libs-release/' }
    maven { name 'github'; url 'https://github.com/juanmuscaria/maven/raw/master' }
}

minecraft {
    version = '1.7.10'
    mcpVersion = '9.05'
    mainClass = 'cpw.mods.fml.relauncher.ServerLaunchWrapper'
    tweakClass = 'cpw.mods.fml.common.launcher.FMLTweaker'
    installerVersion = "1.4"
    srgExtra "PK: org/bukkit/craftbukkit org/bukkit/craftbukkit/v1_7_R4"
}

group = 'cyberdynecc'

ext.buildInfoCached = null

def buildInfo(String key) {
    if (!buildInfoCached) {
        if (project.hasProperty('officialBuild')) {
            buildInfoCached = new JsonSlurper().parse(new URL("http://i.yive.pw/thermos/version"))
        } else {
            buildInfoCached = [
                nextBuildNumber: 'UNOFFICIAL',
                version: 'NONE'
            ]
        }
    }
    return key ? buildInfoCached[key] : buildInfoCached
}

ext.gitInfoCached = null

def gitInfo(String key) {
    if (!gitInfoCached) {
        if (file('.git').exists()) {
            gitInfoCached = [
                hash: ['git', 'log', "--format=%h", '-n', '1'].execute().text.trim(),
                fullHash: ['git', 'log', "--format=%H", '-n', '1'].execute().text.trim(),
                branch: System.getenv("CI_BUILD_REF_NAME") ?: ['git', 'symbolic-ref', '--short', 'HEAD'].execute().text.trim(),
                message: ['git', 'log', "--format=%B", '-n', '1'].execute().text.trim()
            ]
        } else {
            gitInfoCached = [
                hash: 'NOT_A_GIT',
                fullHash: 'NOT_A_GIT',
                branch: 'NOT_A_GIT',
                message: 'NOT_A_GIT'
            ]
        }
    }
    return key ? gitInfoCached[key] : gitInfoCached
}

ext.mcVersion = "1.7.10"
ext.forgeVersion = VersionParser.parseForgeRevision(file('src/main/resources/fmlversion.properties'))
ext.revision = project.hasProperty('revision') ? project.getProperty('revision') : buildInfo('nextBuildNumber')
version = "${mcVersion}-${forgeVersion}.${revision}"
if (project.hasProperty('officialBuild')) println "Updated Thermos version: ${version}"

launch4j {
    jreMinVersion = '1.7.0'
}

configurations {
    compile.extendsFrom exported
    libraries
    bootstrap
}

dependencies {
    bootstrap 'pw.prok:KBootstrap:0.2.+'
    libraries 'net.minecraft:launchwrapper:1.12@jar'
    libraries 'org.ow2.asm:asm-all:5.0.3'
    libraries 'com.typesafe.akka:akka-actor_2.11:2.3.3'
    libraries 'com.typesafe:config:1.2.1'
    libraries 'org.scala-lang:scala-actors-migration_2.11:1.1.0'
    libraries 'org.scala-lang:scala-compiler:2.11.7'
    libraries 'org.scala-lang.plugins:scala-continuations-library_2.11:1.0.2'
    libraries 'org.scala-lang.plugins:scala-continuations-plugin_2.11.2:1.0.2'
    libraries 'org.scala-lang:scala-library:2.11.7'
    libraries 'org.scala-lang:scala-parser-combinators:2.11.0-M4'
    libraries 'org.scala-lang:scala-reflect:2.11.7'
    libraries 'org.scala-lang:scala-swing:2.11.0-M7'
    libraries 'org.scala-lang:scala-xml:2.11.0-M4'
    libraries 'net.sf.jopt-simple:jopt-simple:4.7'
    libraries 'lzma:lzma:0.0.1'
    libraries 'org.yaml:snakeyaml:1.9'
    libraries 'commons-lang:commons-lang:2.6'
    libraries 'org.avaje:ebean:2.7.3'
    libraries 'jline:jline:2.6'
    libraries 'net.md-5:SpecialSource:1.7.4'
    libraries 'net.sourceforge.argo:argo:2.25'
    libraries 'com.googlecode.json-simple:json-simple:1.1'
    libraries 'org.xerial:sqlite-jdbc:3.7.2'
    libraries 'mysql:mysql-connector-java:5.1.14'
    libraries 'javax.persistence:persistence-api:1.0.2'
    libraries 'net.minecraft:server:1.7.10'
    libraries 'pw.prok:KImagine:0.2.0@jar'
    libraries 'org.apache.httpcomponents:httpclient:4.4.1'
    libraries 'net.openhft:affinity:3.0.1'
    libraries 'org.fusesource.jansi:jansi:1.11'
    libraries 'com.koloboke:koloboke-impl-jdk8:1.0.0'
    libraries 'java3d:vecmath:1.3.1'
    libraries 'org.eclipse.collections:eclipse-collections-api:6.0.0'
    libraries 'org.eclipse.collections:eclipse-collections:6.0.0'
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

if (!JavaVersion.current().isJava6Compatible()) {
    throw new InvalidUserDataException("Java 6 compatibility required. Please install a JDK 1.6")
}

signing {
    useGpgCmd()
    sign configurations.archives
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'net.minecraft.launchwrapper.Launch'
    }
}

artifacts {
    archives jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
    repositories {
        maven {
            url = "$buildDir/repo"
        }
    }
}
